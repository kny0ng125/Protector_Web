{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\PatientList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PatientItem from './PatientItem';\nimport './PatientList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientList = ({\n  searchTerm,\n  searchBy,\n  sortBy,\n  showFavorites\n}) => {\n  _s();\n  const [patients, setPatients] = useState([{\n    name: '정재욱',\n    id: '#XOEIF5GJ',\n    registrationDate: '2024-01-01',\n    isFavorite: false\n  }, {\n    name: '여은동',\n    id: '#EXFQ921K',\n    registrationDate: '2024-02-15',\n    isFavorite: true\n  }, {\n    name: '현뚱따',\n    id: '#MAPLEII16',\n    registrationDate: '2024-03-20',\n    isFavorite: false\n  }, {\n    name: '정진우',\n    id: '#DARKYETI',\n    registrationDate: '2024-01-10',\n    isFavorite: true\n  }]);\n  const toggleFavorite = id => {\n    setPatients(patients.map(patient => patient.id === id ? {\n      ...patient,\n      isFavorite: !patient.isFavorite\n    } : patient));\n  };\n  const filteredPatients = patients.filter(patient => {\n    if (showFavorites && !patient.isFavorite) {\n      return false;\n    }\n    if (searchBy === 'name') {\n      return patient.name.includes(searchTerm);\n    } else if (searchBy === 'id') {\n      return patient.id.includes(searchTerm);\n    }\n    return false;\n  }).sort((a, b) => {\n    if (sortBy === 'name') {\n      return a.name.localeCompare(b.name);\n    } else if (sortBy === 'id') {\n      return a.id.localeCompare(b.id);\n    } else if (sortBy === 'registrationDate') {\n      return new Date(a.registrationDate) - new Date(b.registrationDate);\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-list\",\n    children: filteredPatients.map((patient, index) => /*#__PURE__*/_jsxDEV(PatientItem, {\n      patient: patient,\n      toggleFavorite: toggleFavorite\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientList, \"xQvL96ENqSmZGKmxvsfXzvnhU5E=\");\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useState","PatientItem","jsxDEV","_jsxDEV","PatientList","searchTerm","searchBy","sortBy","showFavorites","_s","patients","setPatients","name","id","registrationDate","isFavorite","toggleFavorite","map","patient","filteredPatients","filter","includes","sort","a","b","localeCompare","Date","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/PatientList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PatientItem from './PatientItem';\r\nimport './PatientList.css';\r\n\r\nconst PatientList = ({ searchTerm, searchBy, sortBy, showFavorites }) => {\r\n  const [patients, setPatients] = useState([\r\n    { name: '정재욱', id: '#XOEIF5GJ', registrationDate: '2024-01-01', isFavorite: false },\r\n    { name: '여은동', id: '#EXFQ921K', registrationDate: '2024-02-15', isFavorite: true },\r\n    { name: '현뚱따', id: '#MAPLEII16', registrationDate: '2024-03-20', isFavorite: false },\r\n    { name: '정진우', id: '#DARKYETI', registrationDate: '2024-01-10', isFavorite: true }\r\n  ]);\r\n\r\n  const toggleFavorite = (id) => {\r\n    setPatients(patients.map(patient => \r\n      patient.id === id ? { ...patient, isFavorite: !patient.isFavorite } : patient\r\n    ));\r\n  };\r\n\r\n  const filteredPatients = patients\r\n    .filter((patient) => {\r\n      if (showFavorites && !patient.isFavorite) {\r\n        return false;\r\n      }\r\n      if (searchBy === 'name') {\r\n        return patient.name.includes(searchTerm);\r\n      } else if (searchBy === 'id') {\r\n        return patient.id.includes(searchTerm);\r\n      }\r\n      return false;\r\n    })\r\n    .sort((a, b) => {\r\n      if (sortBy === 'name') {\r\n        return a.name.localeCompare(b.name);\r\n      } else if (sortBy === 'id') {\r\n        return a.id.localeCompare(b.id);\r\n      } else if (sortBy === 'registrationDate') {\r\n        return new Date(a.registrationDate) - new Date(b.registrationDate);\r\n      }\r\n      return 0;\r\n    });\r\n\r\n  return (\r\n    <div className=\"patient-list\">\r\n      {filteredPatients.map((patient, index) => (\r\n        <PatientItem key={index} patient={patient} toggleFavorite={toggleFavorite} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}