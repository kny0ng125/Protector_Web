{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\PatientList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AuthContext } from './AuthContext';\nimport API_BASE_URL from './Config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientList = ({\n  searchTerm,\n  searchBy,\n  sortBy,\n  showFavorites\n}) => {\n  _s();\n  const {\n    authFetch\n  } = useContext(AuthContext);\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPatients = async () => {\n      setLoading(true);\n      try {\n        let searchQuery = '';\n        if (searchTerm) {\n          searchQuery = searchBy === 'uuid' ? `&uuid=${searchTerm}` : `&name=${searchTerm}`;\n        }\n        const sortQuery = `${sortBy},${showFavorites ? 'desc' : 'asc'}`;\n        const response = await authFetch(`${API_BASE_URL}/doctor/patient?sort=${sortQuery}${searchQuery}`, {\n          method: 'GET'\n        });\n        setPatients(response.data.content);\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [searchTerm, searchBy, sortBy, showFavorites, authFetch]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (patients.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC544\\uC9C1 \\uCF58\\uD150\\uCE20\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"patient-list\",\n    children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"patient-item\",\n      children: [patient.identifier, \" (UUID: \", patient.uuid, \")\"]\n    }, patient.uuid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientList, \"Ubh+KtJmJfixpR/71LGB57ErHUI=\");\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","API_BASE_URL","jsxDEV","_jsxDEV","PatientList","searchTerm","searchBy","sortBy","showFavorites","_s","authFetch","patients","setPatients","loading","setLoading","fetchPatients","searchQuery","sortQuery","response","method","data","content","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","patient","identifier","uuid","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/PatientList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AuthContext } from './AuthContext';\r\nimport API_BASE_URL from './Config';\r\n\r\nconst PatientList = ({ searchTerm, searchBy, sortBy, showFavorites }) => {\r\n  const { authFetch } = useContext(AuthContext);\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let searchQuery = '';\r\n        if (searchTerm) {\r\n          searchQuery = searchBy === 'uuid' ? `&uuid=${searchTerm}` : `&name=${searchTerm}`;\r\n        }\r\n\r\n        const sortQuery = `${sortBy},${showFavorites ? 'desc' : 'asc'}`;\r\n        const response = await authFetch(`${API_BASE_URL}/doctor/patient?sort=${sortQuery}${searchQuery}`, {\r\n          method: 'GET',\r\n        });\r\n\r\n        setPatients(response.data.content);\r\n      } catch (error) {\r\n        console.error('Error fetching patients:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPatients();\r\n  }, [searchTerm, searchBy, sortBy, showFavorites, authFetch]);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (patients.length === 0) {\r\n    return <p>아직 콘텐츠가 없습니다.</p>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"patient-list\">\r\n      {patients.map(patient => (\r\n        <li key={patient.uuid} className=\"patient-item\">\r\n          {patient.identifier} (UUID: {patient.uuid})\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PatientList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,YAAY,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM;IAAEC;EAAU,CAAC,GAAGX,UAAU,CAACC,WAAW,CAAC;EAC7C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCD,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,IAAIE,WAAW,GAAG,EAAE;QACpB,IAAIX,UAAU,EAAE;UACdW,WAAW,GAAGV,QAAQ,KAAK,MAAM,GAAG,SAASD,UAAU,EAAE,GAAG,SAASA,UAAU,EAAE;QACnF;QAEA,MAAMY,SAAS,GAAG,GAAGV,MAAM,IAAIC,aAAa,GAAG,MAAM,GAAG,KAAK,EAAE;QAC/D,MAAMU,QAAQ,GAAG,MAAMR,SAAS,CAAC,GAAGT,YAAY,wBAAwBgB,SAAS,GAAGD,WAAW,EAAE,EAAE;UACjGG,MAAM,EAAE;QACV,CAAC,CAAC;QAEFP,WAAW,CAACM,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACV,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,aAAa,EAAEE,SAAS,CAAC,CAAC;EAE5D,IAAIG,OAAO,EAAE;IACX,oBAAOV,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAIjB,QAAQ,CAACkB,MAAM,KAAK,CAAC,EAAE;IACzB,oBAAO1B,OAAA;MAAAqB,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7B;EAEA,oBACEzB,OAAA;IAAI2B,SAAS,EAAC,cAAc;IAAAN,QAAA,EACzBb,QAAQ,CAACoB,GAAG,CAACC,OAAO,iBACnB7B,OAAA;MAAuB2B,SAAS,EAAC,cAAc;MAAAN,QAAA,GAC5CQ,OAAO,CAACC,UAAU,EAAC,UAAQ,EAACD,OAAO,CAACE,IAAI,EAAC,GAC5C;IAAA,GAFSF,OAAO,CAACE,IAAI;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjB,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACnB,EAAA,CA/CIL,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}