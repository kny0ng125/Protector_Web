{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from './AuthContext'; // AuthContext에서 authFetch를 가져옵니다.\nimport API_BASE_URL from './Config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const {\n    authFetch\n  } = useContext(AuthContext); // authFetch를 사용하여 API 요청을 처리합니다.\n  const [patientIdentifier, setPatientIdentifier] = useState('');\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError(null);\n    setResponse(null);\n    try {\n      console.log('Sending request with data:', {\n        patientIdentifier\n      });\n      const response = await authFetch(`${API_BASE_URL}/doctor/patient`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: JSON.stringify({\n          patientIdentifier\n        })\n      });\n      if (response.status === 201) {\n        setResponse(response.data);\n      } else {\n        setError(`Unexpected response code: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Request failed:', error);\n      console.error('Response data:', error.response ? error.response.data : 'No response data');\n      setError(error.response ? error.response.data : 'An error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submit Patient Identifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: patientIdentifier,\n        onChange: e => setPatientIdentifier(e.target.value),\n        placeholder: \"Enter patient identifier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(response, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"hxKeZEm/9+0bo7cSn1Et+bnNgU0=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","API_BASE_URL","jsxDEV","_jsxDEV","Test","_s","authFetch","patientIdentifier","setPatientIdentifier","response","setResponse","error","setError","handleSubmit","event","preventDefault","console","log","method","headers","data","JSON","stringify","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/Test.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from './AuthContext'; // AuthContext에서 authFetch를 가져옵니다.\r\nimport API_BASE_URL from './Config';\r\n\r\nconst Test = () => {\r\n  const { authFetch } = useContext(AuthContext); // authFetch를 사용하여 API 요청을 처리합니다.\r\n  const [patientIdentifier, setPatientIdentifier] = useState('');\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setError(null);\r\n    setResponse(null);\r\n  \r\n    try {\r\n      console.log('Sending request with data:', { patientIdentifier });\r\n  \r\n      const response = await authFetch(`${API_BASE_URL}/doctor/patient`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        data: JSON.stringify({ patientIdentifier }),\r\n      });\r\n  \r\n      if (response.status === 201) {\r\n        setResponse(response.data);\r\n      } else {\r\n        setError(`Unexpected response code: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Request failed:', error);\r\n      console.error('Response data:', error.response ? error.response.data : 'No response data');\r\n      setError(error.response ? error.response.data : 'An error occurred');\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Submit Patient Identifier</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={patientIdentifier}\r\n          onChange={(e) => setPatientIdentifier(e.target.value)}\r\n          placeholder=\"Enter patient identifier\"\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      {response && (\r\n        <div>\r\n          <h2>Response</h2>\r\n          <pre>{JSON.stringify(response, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div>\r\n          <h2>Error</h2>\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}