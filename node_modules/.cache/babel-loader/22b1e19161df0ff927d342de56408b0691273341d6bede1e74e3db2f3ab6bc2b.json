{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\PatientList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AuthContext } from './AuthContext';\nimport API_BASE_URL from './Config';\nimport PatientItem from './PatientItem';\nimport './PatientList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientList = ({\n  searchTerm,\n  searchBy,\n  sortBy,\n  sortOrder,\n  showFavorites,\n  page,\n  onNextPage,\n  onPreviousPage,\n  triggerRefresh\n}) => {\n  _s();\n  const {\n    authFetch\n  } = useContext(AuthContext);\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchPatients = async () => {\n      setLoading(true);\n      try {\n        let searchQuery = '';\n        if (searchTerm) {\n          searchQuery = searchBy === 'uuid' ? `&uuid=${searchTerm}` : `&name=${searchTerm}`;\n        }\n        const sortQuery = `${sortBy},${sortOrder}`;\n        const response = await authFetch(`${API_BASE_URL}/doctor/patient?page=${page}&size=5&sort=${sortQuery}${searchQuery}`, {\n          method: 'GET'\n        });\n        console.log('Full Response:', response.data);\n        setPatients(response.data.content || []);\n        setTotalPages(response.data.totalPages || 1);\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n        setPatients([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [searchTerm, searchBy, sortBy, sortOrder, showFavorites, page, authFetch, triggerRefresh]);\n  const toggleFavorite = async patientId => {\n    // 즐겨찾기 토글 로직 (API를 통한 업데이트 등)\n  };\n  const deletePatient = async id => {\n    try {\n      const response = await authFetch(`${API_BASE_URL}/doctor/patient/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.status === 200 || response.status === 204) {\n        setPatients(prevPatients => prevPatients.filter(patient => patient.id !== id));\n      } else {\n        const errorMessage = response.data ? response.data.message : 'Unknown error occurred';\n        console.error('Failed to delete patient', errorMessage);\n        if (errorMessage) {\n          alert(`Error: ${errorMessage}`);\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting patient:', error);\n      if (error.message) {\n        alert(`Error: ${error.message}`);\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  if (!patients || patients.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC544\\uC9C1 \\uCF58\\uD150\\uCE20\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-list\",\n    children: [patients.map(patient => /*#__PURE__*/_jsxDEV(PatientItem, {\n      patient: patient,\n      toggleFavorite: toggleFavorite,\n      deletePatient: deletePatient\n    }, patient.uuid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onPreviousPage,\n        disabled: page === 0,\n        className: \"pagination-arrow\",\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pagination-info\",\n        children: [\"Page \", page + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onNextPage,\n        disabled: page >= totalPages - 1,\n        className: \"pagination-arrow\",\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientList, \"a0WyVWZnTdEf3OdbSxXrABmpLMo=\");\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","API_BASE_URL","PatientItem","jsxDEV","_jsxDEV","PatientList","searchTerm","searchBy","sortBy","sortOrder","showFavorites","page","onNextPage","onPreviousPage","triggerRefresh","_s","authFetch","patients","setPatients","loading","setLoading","totalPages","setTotalPages","fetchPatients","searchQuery","sortQuery","response","method","console","log","data","content","error","toggleFavorite","patientId","deletePatient","id","status","prevPatients","filter","patient","errorMessage","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","uuid","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/PatientList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AuthContext } from './AuthContext';\r\nimport API_BASE_URL from './Config';\r\nimport PatientItem from './PatientItem';\r\nimport './PatientList.css';\r\n\r\nconst PatientList = ({ searchTerm, searchBy, sortBy, sortOrder, showFavorites, page, onNextPage, onPreviousPage, triggerRefresh }) => {\r\n  const { authFetch } = useContext(AuthContext);\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let searchQuery = '';\r\n        if (searchTerm) {\r\n          searchQuery = searchBy === 'uuid' ? `&uuid=${searchTerm}` : `&name=${searchTerm}`;\r\n        }\r\n\r\n        const sortQuery = `${sortBy},${sortOrder}`;\r\n        const response = await authFetch(`${API_BASE_URL}/doctor/patient?page=${page}&size=5&sort=${sortQuery}${searchQuery}`, {\r\n          method: 'GET',\r\n        });\r\n\r\n        console.log('Full Response:', response.data);\r\n        setPatients(response.data.content || []);\r\n        setTotalPages(response.data.totalPages || 1);\r\n      } catch (error) {\r\n        console.error('Error fetching patients:', error);\r\n        setPatients([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPatients();\r\n  }, [searchTerm, searchBy, sortBy, sortOrder, showFavorites, page, authFetch, triggerRefresh]);\r\n\r\n  const toggleFavorite = async (patientId) => {\r\n    // 즐겨찾기 토글 로직 (API를 통한 업데이트 등)\r\n  };\r\n\r\n  const deletePatient = async (id) => {\r\n    try {\r\n      const response = await authFetch(`${API_BASE_URL}/doctor/patient/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.status === 200 || response.status === 204) {\r\n        setPatients(prevPatients => prevPatients.filter(patient => patient.id !== id));\r\n      } else {\r\n        const errorMessage = response.data ? response.data.message : 'Unknown error occurred';\r\n        console.error('Failed to delete patient', errorMessage);\r\n        if (errorMessage) {\r\n          alert(`Error: ${errorMessage}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting patient:', error);\r\n      if (error.message) {\r\n        alert(`Error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (!patients || patients.length === 0) {\r\n    return <p>아직 콘텐츠가 없습니다.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"patient-list\">\r\n      {patients.map(patient => (\r\n        <PatientItem\r\n          key={patient.uuid}\r\n          patient={patient}\r\n          toggleFavorite={toggleFavorite}\r\n          deletePatient={deletePatient}\r\n        />\r\n      ))}\r\n      <div className=\"pagination\">\r\n        <button onClick={onPreviousPage} disabled={page === 0} className=\"pagination-arrow\">\r\n          &larr;\r\n        </button>\r\n        <span className=\"pagination-info\">Page {page + 1}</span>\r\n        <button onClick={onNextPage} disabled={page >= totalPages - 1} className=\"pagination-arrow\">\r\n          &rarr;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,YAAY,MAAM,UAAU;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,SAAS;EAAEC,aAAa;EAAEC,IAAI;EAAEC,UAAU;EAAEC,cAAc;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACpI,MAAM;IAAEC;EAAU,CAAC,GAAGjB,UAAU,CAACC,WAAW,CAAC;EAC7C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAM0B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,IAAII,WAAW,GAAG,EAAE;QACpB,IAAIlB,UAAU,EAAE;UACdkB,WAAW,GAAGjB,QAAQ,KAAK,MAAM,GAAG,SAASD,UAAU,EAAE,GAAG,SAASA,UAAU,EAAE;QACnF;QAEA,MAAMmB,SAAS,GAAG,GAAGjB,MAAM,IAAIC,SAAS,EAAE;QAC1C,MAAMiB,QAAQ,GAAG,MAAMV,SAAS,CAAC,GAAGf,YAAY,wBAAwBU,IAAI,gBAAgBc,SAAS,GAAGD,WAAW,EAAE,EAAE;UACrHG,MAAM,EAAE;QACV,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC;QAC5CZ,WAAW,CAACQ,QAAQ,CAACI,IAAI,CAACC,OAAO,IAAI,EAAE,CAAC;QACxCT,aAAa,CAACI,QAAQ,CAACI,IAAI,CAACT,UAAU,IAAI,CAAC,CAAC;MAC9C,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDd,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACjB,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,aAAa,EAAEC,IAAI,EAAEK,SAAS,EAAEF,cAAc,CAAC,CAAC;EAE7F,MAAMmB,cAAc,GAAG,MAAOC,SAAS,IAAK;IAC1C;EAAA,CACD;EAED,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;IAClC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMV,SAAS,CAAC,GAAGf,YAAY,mBAAmBmC,EAAE,EAAE,EAAE;QACvET,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAID,QAAQ,CAACW,MAAM,KAAK,GAAG,IAAIX,QAAQ,CAACW,MAAM,KAAK,GAAG,EAAE;QACtDnB,WAAW,CAACoB,YAAY,IAAIA,YAAY,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;MAChF,CAAC,MAAM;QACL,MAAMK,YAAY,GAAGf,QAAQ,CAACI,IAAI,GAAGJ,QAAQ,CAACI,IAAI,CAACY,OAAO,GAAG,wBAAwB;QACrFd,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAES,YAAY,CAAC;QACvD,IAAIA,YAAY,EAAE;UAChBE,KAAK,CAAC,UAAUF,YAAY,EAAE,CAAC;QACjC;MACF;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,IAAIA,KAAK,CAACU,OAAO,EAAE;QACjBC,KAAK,CAAC,UAAUX,KAAK,CAACU,OAAO,EAAE,CAAC;MAClC;IACF;EACF,CAAC;EAED,IAAIvB,OAAO,EAAE;IACX,oBAAOf,OAAA;MAAAwC,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAI,CAAC/B,QAAQ,IAAIA,QAAQ,CAACgC,MAAM,KAAK,CAAC,EAAE;IACtC,oBAAO7C,OAAA;MAAAwC,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7B;EAEA,oBACE5C,OAAA;IAAK8C,SAAS,EAAC,cAAc;IAAAN,QAAA,GAC1B3B,QAAQ,CAACkC,GAAG,CAACX,OAAO,iBACnBpC,OAAA,CAACF,WAAW;MAEVsC,OAAO,EAAEA,OAAQ;MACjBP,cAAc,EAAEA,cAAe;MAC/BE,aAAa,EAAEA;IAAc,GAHxBK,OAAO,CAACY,IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIlB,CACF,CAAC,eACF5C,OAAA;MAAK8C,SAAS,EAAC,YAAY;MAAAN,QAAA,gBACzBxC,OAAA;QAAQiD,OAAO,EAAExC,cAAe;QAACyC,QAAQ,EAAE3C,IAAI,KAAK,CAAE;QAACuC,SAAS,EAAC,kBAAkB;QAAAN,QAAA,EAAC;MAEpF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5C,OAAA;QAAM8C,SAAS,EAAC,iBAAiB;QAAAN,QAAA,GAAC,OAAK,EAACjC,IAAI,GAAG,CAAC;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxD5C,OAAA;QAAQiD,OAAO,EAAEzC,UAAW;QAAC0C,QAAQ,EAAE3C,IAAI,IAAIU,UAAU,GAAG,CAAE;QAAC6B,SAAS,EAAC,kBAAkB;QAAAN,QAAA,EAAC;MAE5F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjC,EAAA,CA1FIV,WAAW;AAAAkD,EAAA,GAAXlD,WAAW;AA4FjB,eAAeA,WAAW;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}