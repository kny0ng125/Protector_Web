{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\Patient_Info\\\\HealthCharts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { AuthContext } from '../AuthContext';\nimport API_BASE_URL from '../Config';\nimport SingleChart from '../Chart/SingleChart';\nimport DoubleChart from '../Chart/DoubleChart';\nimport TripleChart from '../Chart/TripleChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthCharts = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    authFetch\n  } = useContext(AuthContext);\n  const [ecgData, setEcgData] = useState(null);\n  const [hrvData, setHrvData] = useState(null);\n  const [rrData, setRrData] = useState(null);\n  const [oxygenSaturationData, setOxygenSaturationData] = useState(null);\n  const [heartRateData, setHeartRateData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [metricPeriod, setMetricPeriod] = useState('LAST_MONTH');\n  const fetchMeasurementData = async (measurementType, setDataCallback, responseKey) => {\n    try {\n      const response = await authFetch(`${API_BASE_URL}/doctor/${measurementType}/${id}?page=&size=&metricPeriod=${metricPeriod}`, {\n        method: 'GET'\n      });\n      if (response.status === 200) {\n        const data = response.data;\n        console.log(`Fetched ${measurementType} data:`, data); // Fetch 결과 출력\n        if (data && data[responseKey] && Array.isArray(data[responseKey].content)) {\n          setDataCallback(data[responseKey]);\n        } else {\n          console.error(`Invalid response structure for ${measurementType}:`, data);\n          setDataCallback({\n            content: []\n          }); // 데이터가 없거나 잘못된 경우 빈 배열로 초기화\n        }\n      } else {\n        console.error(`Failed to fetch ${measurementType} data:`, response.statusText, response);\n      }\n    } catch (error) {\n      console.error(`Error fetching ${measurementType} data:`, error);\n      setDataCallback({\n        content: []\n      }); // 에러 발생 시 빈 배열로 초기화\n    }\n  };\n  useEffect(() => {\n    setLoading(true);\n    Promise.all([fetchMeasurementData('ecg', setEcgData, 'ecgList'), fetchMeasurementData('hrv', setHrvData, 'hrvList'), fetchMeasurementData('rr', setRrData, 'rrList'), fetchMeasurementData('o2sat', setOxygenSaturationData, 'oxygenSaturationList'), fetchMeasurementData('hr', setHeartRateData, 'heartRateList')]).then(() => setLoading(false)).catch(error => {\n      console.error('Error in fetching measurement data:', error);\n      setLoading(false);\n    });\n  }, [id, authFetch, metricPeriod]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health-info-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAC74\\uAC15 \\uB370\\uC774\\uD130\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uAE30\\uAC04 \\uC120\\uD0DD: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: metricPeriod,\n        onChange: e => setMetricPeriod(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAST_WEEK\",\n          children: \"\\uC9C0\\uB09C \\uC8FC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAST_MONTH\",\n          children: \"\\uC9C0\\uB09C \\uB2EC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAST_THREE_MONTHS\",\n          children: \"\\uC9C0\\uB09C \\uC138 \\uB2EC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), ecgData && ecgData.content.length > 0 && /*#__PURE__*/_jsxDEV(SingleChart, {\n      data: ecgData,\n      title: \"ECG Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 49\n    }, this), hrvData && hrvData.content.length > 0 && /*#__PURE__*/_jsxDEV(SingleChart, {\n      data: hrvData,\n      title: \"HRV Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 49\n    }, this), rrData && rrData.content.length > 0 && /*#__PURE__*/_jsxDEV(SingleChart, {\n      data: rrData,\n      title: \"RR Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 47\n    }, this), oxygenSaturationData && oxygenSaturationData.content.length > 0 && /*#__PURE__*/_jsxDEV(DoubleChart, {\n      data: oxygenSaturationData,\n      title: \"Oxygen Saturation Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 75\n    }, this), heartRateData && heartRateData.content.length > 0 && /*#__PURE__*/_jsxDEV(TripleChart, {\n      data: heartRateData,\n      title: \"Heart Rate Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 61\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthCharts, \"NoIy/Lj5Wk+Y08U3Y67QW5p5L14=\", false, function () {\n  return [useParams];\n});\n_c = HealthCharts;\nexport default HealthCharts;\nvar _c;\n$RefreshReg$(_c, \"HealthCharts\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","AuthContext","API_BASE_URL","SingleChart","DoubleChart","TripleChart","jsxDEV","_jsxDEV","HealthCharts","_s","id","authFetch","ecgData","setEcgData","hrvData","setHrvData","rrData","setRrData","oxygenSaturationData","setOxygenSaturationData","heartRateData","setHeartRateData","loading","setLoading","metricPeriod","setMetricPeriod","fetchMeasurementData","measurementType","setDataCallback","responseKey","response","method","status","data","console","log","Array","isArray","content","error","statusText","Promise","all","then","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","e","target","length","title","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/Patient_Info/HealthCharts.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AuthContext } from '../AuthContext';\r\nimport API_BASE_URL from '../Config';\r\nimport SingleChart from '../Chart/SingleChart';\r\nimport DoubleChart from '../Chart/DoubleChart';\r\nimport TripleChart from '../Chart/TripleChart';\r\n\r\nconst HealthCharts = () => {\r\n  const { id } = useParams();\r\n  const { authFetch } = useContext(AuthContext);\r\n  const [ecgData, setEcgData] = useState(null);\r\n  const [hrvData, setHrvData] = useState(null);\r\n  const [rrData, setRrData] = useState(null);\r\n  const [oxygenSaturationData, setOxygenSaturationData] = useState(null);\r\n  const [heartRateData, setHeartRateData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [metricPeriod, setMetricPeriod] = useState('LAST_MONTH');\r\n\r\n  const fetchMeasurementData = async (measurementType, setDataCallback, responseKey) => {\r\n    try {\r\n      const response = await authFetch(\r\n        `${API_BASE_URL}/doctor/${measurementType}/${id}?page=&size=&metricPeriod=${metricPeriod}`, \r\n        {\r\n          method: 'GET',\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        const data = response.data;\r\n        console.log(`Fetched ${measurementType} data:`, data); // Fetch 결과 출력\r\n        if (data && data[responseKey] && Array.isArray(data[responseKey].content)) {\r\n          setDataCallback(data[responseKey]);\r\n        } else {\r\n          console.error(`Invalid response structure for ${measurementType}:`, data);\r\n          setDataCallback({ content: [] }); // 데이터가 없거나 잘못된 경우 빈 배열로 초기화\r\n        }\r\n      } else {\r\n        console.error(`Failed to fetch ${measurementType} data:`, response.statusText, response);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching ${measurementType} data:`, error);\r\n      setDataCallback({ content: [] }); // 에러 발생 시 빈 배열로 초기화\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    Promise.all([\r\n      fetchMeasurementData('ecg', setEcgData, 'ecgList'),\r\n      fetchMeasurementData('hrv', setHrvData, 'hrvList'),\r\n      fetchMeasurementData('rr', setRrData, 'rrList'),\r\n      fetchMeasurementData('o2sat', setOxygenSaturationData, 'oxygenSaturationList'),\r\n      fetchMeasurementData('hr', setHeartRateData, 'heartRateList')\r\n    ])\r\n    .then(() => setLoading(false))\r\n    .catch((error) => {\r\n      console.error('Error in fetching measurement data:', error);\r\n      setLoading(false);\r\n    });\r\n  }, [id, authFetch, metricPeriod]);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"health-info-page\">\r\n      <h2>건강 데이터</h2>\r\n\r\n      <div>\r\n        <label>기간 선택: </label>\r\n        <select value={metricPeriod} onChange={(e) => setMetricPeriod(e.target.value)}>\r\n          <option value=\"LAST_WEEK\">지난 주</option>\r\n          <option value=\"LAST_MONTH\">지난 달</option>\r\n          <option value=\"LAST_THREE_MONTHS\">지난 세 달</option>\r\n        </select>\r\n      </div>\r\n\r\n      {ecgData && ecgData.content.length > 0 && <SingleChart data={ecgData} title=\"ECG Data\" />}\r\n      {hrvData && hrvData.content.length > 0 && <SingleChart data={hrvData} title=\"HRV Data\" />}\r\n      {rrData && rrData.content.length > 0 && <SingleChart data={rrData} title=\"RR Data\" />}\r\n      {oxygenSaturationData && oxygenSaturationData.content.length > 0 && <DoubleChart data={oxygenSaturationData} title=\"Oxygen Saturation Data\" />}\r\n      {heartRateData && heartRateData.content.length > 0 && <TripleChart data={heartRateData} title=\"Heart Rate Data\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthCharts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}