{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\Chart\\\\ECGChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale // 추가된 부분: TimeScale 등록\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns'; // 추가된 부분: Date 어댑터를 import\n\n// Chart.js 모듈 등록\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale // 추가된 부분: TimeScale 등록\n);\nconst ECGChart = ({\n  ecgData,\n  dailyAverage\n}) => {\n  // ecgData에서 labels와 data를 준비\n  const labels = ecgData.content.map(item => item.measuredAt); // 시간\n  const dataPoints = ecgData.content.map(item => item.value); // 측정값\n\n  // dailyAverage 데이터를 준비\n  const dailyLabels = Object.keys(dailyAverage);\n  const dailyDataPoints = Object.values(dailyAverage);\n\n  // 차트 데이터\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'ECG Values',\n      data: dataPoints,\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n\n  // 일일 평균 차트를 위한 데이터\n  const dailyData = {\n    labels: dailyLabels,\n    datasets: [{\n      label: 'Daily Average',\n      data: dailyDataPoints,\n      fill: false,\n      borderColor: 'rgb(255, 99, 132)',\n      tension: 0.1\n    }]\n  };\n\n  // 차트 옵션\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'ECG Measurement Over Time'\n      }\n    },\n    scales: {\n      x: {\n        type: 'time',\n        // \"time\" 스케일 사용\n        time: {\n          unit: 'hour',\n          // 시간 단위\n          displayFormats: {\n            hour: 'MM/dd HH:mm'\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ECG Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily Average ECG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: dailyData,\n      options: {\n        ...options,\n        scales: {\n          x: {\n            type: 'category'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_c = ECGChart;\nexport default ECGChart;\nvar _c;\n$RefreshReg$(_c, \"ECGChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","ECGChart","ecgData","dailyAverage","labels","content","map","item","measuredAt","dataPoints","value","dailyLabels","Object","keys","dailyDataPoints","values","data","datasets","label","fill","borderColor","tension","dailyData","options","responsive","plugins","legend","position","title","display","text","scales","x","type","time","unit","displayFormats","hour","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/Chart/ECGChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale, // 추가된 부분: TimeScale 등록\r\n} from 'chart.js';\r\nimport 'chartjs-adapter-date-fns'; // 추가된 부분: Date 어댑터를 import\r\n\r\n// Chart.js 모듈 등록\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale // 추가된 부분: TimeScale 등록\r\n);\r\n\r\nconst ECGChart = ({ ecgData, dailyAverage }) => {\r\n  // ecgData에서 labels와 data를 준비\r\n  const labels = ecgData.content.map(item => item.measuredAt); // 시간\r\n  const dataPoints = ecgData.content.map(item => item.value); // 측정값\r\n\r\n  // dailyAverage 데이터를 준비\r\n  const dailyLabels = Object.keys(dailyAverage);\r\n  const dailyDataPoints = Object.values(dailyAverage);\r\n\r\n  // 차트 데이터\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: 'ECG Values',\r\n        data: dataPoints,\r\n        fill: false,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // 일일 평균 차트를 위한 데이터\r\n  const dailyData = {\r\n    labels: dailyLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Daily Average',\r\n        data: dailyDataPoints,\r\n        fill: false,\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // 차트 옵션\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'ECG Measurement Over Time',\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        type: 'time', // \"time\" 스케일 사용\r\n        time: {\r\n          unit: 'hour', // 시간 단위\r\n          displayFormats: {\r\n            hour: 'MM/dd HH:mm',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>ECG Line Chart</h2>\r\n      <Line data={data} options={options} />\r\n      \r\n      <h2>Daily Average ECG</h2>\r\n      <Line data={dailyData} options={{ ...options, scales: { x: { type: 'category' } } }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ECGChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}