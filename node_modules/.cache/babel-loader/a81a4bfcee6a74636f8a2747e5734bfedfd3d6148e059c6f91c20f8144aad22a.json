{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\AddPatientModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API_BASE_URL from './Config';\nimport './AddPatientModal.css'; // 스타일링을 위한 CSS 파일\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPatientModal = ({\n  isOpen,\n  onClose,\n  onAddPatient\n}) => {\n  _s();\n  const [uuid, setUuid] = useState('');\n  const [message, setMessage] = useState('');\n  const handleAddPatient = async () => {\n    if (!uuid) {\n      setMessage('UUID를 입력해주세요.');\n      return;\n    }\n    try {\n      console.log('Request URL:', `${API_BASE_URL}/doctor/patient`);\n      console.log('Request Headers:', {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      });\n      console.log('Request Body:', {\n        uuid\n      });\n      const response = await fetch(`${API_BASE_URL}/doctor/patient`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        },\n        body: JSON.stringify({\n          uuid\n        })\n      });\n      console.log('Response Status:', response.status);\n      if (response.ok) {\n        setMessage('추가되었습니다!');\n        onAddPatient(); // 환자 추가 후 PatientList 새로고침\n        onClose(); // 모달 닫기\n      } else {\n        setMessage('환자 추가에 실패했습니다. 다시 시도해주세요.');\n      }\n    } catch (error) {\n      console.error('Error adding patient:', error);\n      setMessage('서버와의 통신에 실패했습니다.');\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-icon\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD658\\uC790 \\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD574\\uB2F9 \\uCE78\\uC5D0 UUID\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: uuid,\n        onChange: e => setUuid(e.target.value),\n        placeholder: \"UUID \\uC785\\uB825\",\n        className: \"modal-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPatient,\n        className: \"modal-button\",\n        children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AddPatientModal, \"yBiZ3PpzwS6K0FcIGap7Hza2S2A=\");\n_c = AddPatientModal;\nexport default AddPatientModal;\nvar _c;\n$RefreshReg$(_c, \"AddPatientModal\");","map":{"version":3,"names":["React","useState","API_BASE_URL","jsxDEV","_jsxDEV","AddPatientModal","isOpen","onClose","onAddPatient","_s","uuid","setUuid","message","setMessage","handleAddPatient","console","log","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","status","ok","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/AddPatientModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport API_BASE_URL from './Config';\r\nimport './AddPatientModal.css'; // 스타일링을 위한 CSS 파일\r\n\r\nconst AddPatientModal = ({ isOpen, onClose, onAddPatient }) => {\r\n  const [uuid, setUuid] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleAddPatient = async () => {\r\n    if (!uuid) {\r\n      setMessage('UUID를 입력해주세요.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Request URL:', `${API_BASE_URL}/doctor/patient`);\r\n      console.log('Request Headers:', {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n      });\r\n      console.log('Request Body:', { uuid });\r\n\r\n      const response = await fetch(`${API_BASE_URL}/doctor/patient`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n        },\r\n        body: JSON.stringify({ uuid }),\r\n      });\r\n\r\n      console.log('Response Status:', response.status);\r\n\r\n      if (response.ok) {\r\n        setMessage('추가되었습니다!');\r\n        onAddPatient(); // 환자 추가 후 PatientList 새로고침\r\n        onClose(); // 모달 닫기\r\n      } else {\r\n        setMessage('환자 추가에 실패했습니다. 다시 시도해주세요.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding patient:', error);\r\n      setMessage('서버와의 통신에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <button className=\"modal-close-icon\" onClick={onClose}>×</button>\r\n        <h2>환자 추가하기</h2>\r\n        <p>해당 칸에 UUID를 입력해주세요</p>\r\n        <input\r\n          type=\"text\"\r\n          value={uuid}\r\n          onChange={(e) => setUuid(e.target.value)}\r\n          placeholder=\"UUID 입력\"\r\n          className=\"modal-input\"\r\n        />\r\n        {message && <p className=\"modal-message\">{message}</p>}\r\n        <button onClick={handleAddPatient} className=\"modal-button\">등록하기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPatientModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}