{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API_BASE_URL from './Config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('accessToken'));\n  const [accessToken, setAccessToken] = useState(localStorage.getItem('accessToken'));\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\n  const navigate = useNavigate();\n  const login = (accessToken, refreshToken) => {\n    setAccessToken(accessToken);\n    setRefreshToken(refreshToken);\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    setAccessToken(null);\n    setRefreshToken(null);\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n  const refreshAccessToken = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/doctor/refresh`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refreshToken: localStorage.getItem('refreshToken')\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setAccessToken(data.accessToken);\n        localStorage.setItem('accessToken', data.accessToken);\n        return data.accessToken;\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error('Error refreshing access token:', error);\n      logout();\n    }\n  };\n  const authFetch = async (url, options = {}) => {\n    if (!options.headers) {\n      options.headers = {};\n    }\n    options.headers['Authorization'] = `Bearer ${accessToken}`;\n    let response = await fetch(url, options);\n    if (response.status === 401) {\n      const newToken = await refreshAccessToken();\n      if (newToken) {\n        options.headers['Authorization'] = `Bearer ${newToken}`;\n        response = await fetch(url, options);\n      }\n    }\n    return response;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      authFetch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"0vpVIg/A8j48ue8d4LqkZMEbYHs=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","API_BASE_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","accessToken","setAccessToken","refreshToken","setRefreshToken","navigate","login","setItem","logout","removeItem","refreshAccessToken","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","console","authFetch","url","options","status","newToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API_BASE_URL from './Config';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('accessToken'));\r\n  const [accessToken, setAccessToken] = useState(localStorage.getItem('accessToken'));\r\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\r\n  const navigate = useNavigate();\r\n\r\n  const login = (accessToken, refreshToken) => {\r\n    setAccessToken(accessToken);\r\n    setRefreshToken(refreshToken);\r\n    localStorage.setItem('accessToken', accessToken);\r\n    localStorage.setItem('refreshToken', refreshToken);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    setIsAuthenticated(false);\r\n    navigate('/login');\r\n  };\r\n\r\n  const refreshAccessToken = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/doctor/refresh`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ refreshToken: localStorage.getItem('refreshToken') }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setAccessToken(data.accessToken);\r\n        localStorage.setItem('accessToken', data.accessToken);\r\n        return data.accessToken;\r\n      } else {\r\n        logout();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error refreshing access token:', error);\r\n      logout();\r\n    }\r\n  };\r\n\r\n  const authFetch = async (url, options = {}) => {\r\n    if (!options.headers) {\r\n      options.headers = {};\r\n    }\r\n\r\n    options.headers['Authorization'] = `Bearer ${accessToken}`;\r\n\r\n    let response = await fetch(url, options);\r\n\r\n    if (response.status === 401) {\r\n      const newToken = await refreshAccessToken();\r\n      if (newToken) {\r\n        options.headers['Authorization'] = `Bearer ${newToken}`;\r\n        response = await fetch(url, options);\r\n      }\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, authFetch }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}