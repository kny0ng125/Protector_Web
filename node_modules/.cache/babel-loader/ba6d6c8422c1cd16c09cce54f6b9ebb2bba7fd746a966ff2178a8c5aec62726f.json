{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport API_BASE_URL from './Config';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('accessToken'));\n  const [accessToken, setAccessToken] = useState(localStorage.getItem('accessToken'));\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\n  useEffect(() => {\n    const storedRefreshToken = localStorage.getItem('refreshToken');\n    if (storedRefreshToken) {\n      setRefreshToken(storedRefreshToken);\n    }\n  }, []);\n  const login = (accessToken, refreshToken) => {\n    setAccessToken(accessToken);\n    setRefreshToken(refreshToken);\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n    setIsAuthenticated(true);\n  };\n  const logout = async () => {\n    try {\n      await axios.post(`${API_BASE_URL}/doctor/logout`, {}, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true // 쿠키가 요청에 포함되도록 설정\n      });\n    } catch (error) {\n      console.error('Error logging out:', error);\n    } finally {\n      setAccessToken(null);\n      setRefreshToken(null);\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      setIsAuthenticated(false);\n    }\n  };\n  const authFetch = async (url, options = {}) => {\n    if (!options.headers) {\n      options.headers = {};\n    }\n    options.headers['Authorization'] = `Bearer ${accessToken}`;\n    try {\n      let response = await axios(url, options);\n      if (response.status === 401) {\n        const newToken = await refreshAccessToken();\n        if (newToken) {\n          options.headers['Authorization'] = `Bearer ${newToken}`;\n          response = await axios(url, options);\n        }\n      }\n      return response;\n    } catch (error) {\n      console.error('Error in authFetch:', error);\n      return error.response;\n    }\n  };\n\n  // 임시 로그인 상태 변경 함수\n  const toggleAuth = () => {\n    setIsAuthenticated(!isAuthenticated);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      authFetch,\n      toggleAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"O3F/ECXE0IwSQ1fpUgrs61w2bWI=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","API_BASE_URL","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","accessToken","setAccessToken","refreshToken","setRefreshToken","storedRefreshToken","login","setItem","logout","post","headers","withCredentials","error","console","removeItem","authFetch","url","options","response","status","newToken","refreshAccessToken","toggleAuth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport API_BASE_URL from './Config';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('accessToken'));\r\n  const [accessToken, setAccessToken] = useState(localStorage.getItem('accessToken'));\r\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\r\n\r\n  useEffect(() => {\r\n    const storedRefreshToken = localStorage.getItem('refreshToken');\r\n    if (storedRefreshToken) {\r\n      setRefreshToken(storedRefreshToken);\r\n    }\r\n  }, []);\r\n\r\n  const login = (accessToken, refreshToken) => {\r\n    setAccessToken(accessToken);\r\n    setRefreshToken(refreshToken);\r\n    localStorage.setItem('accessToken', accessToken);\r\n    localStorage.setItem('refreshToken', refreshToken);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/doctor/logout`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        withCredentials: true,  // 쿠키가 요청에 포함되도록 설정\r\n      });\r\n    } catch (error) {\r\n      console.error('Error logging out:', error);\r\n    } finally {\r\n      setAccessToken(null);\r\n      setRefreshToken(null);\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const authFetch = async (url, options = {}) => {\r\n    if (!options.headers) {\r\n      options.headers = {};\r\n    }\r\n\r\n    options.headers['Authorization'] = `Bearer ${accessToken}`;\r\n\r\n    try {\r\n      let response = await axios(url, options);\r\n\r\n      if (response.status === 401) {\r\n        const newToken = await refreshAccessToken();\r\n        if (newToken) {\r\n          options.headers['Authorization'] = `Bearer ${newToken}`;\r\n          response = await axios(url, options);\r\n        }\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error in authFetch:', error);\r\n      return error.response;\r\n    }\r\n  };\r\n\r\n  // 임시 로그인 상태 변경 함수\r\n  const toggleAuth = () => {\r\n    setIsAuthenticated(!isAuthenticated);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, authFetch, toggleAuth }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,YAAY,MAAM,UAAU;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAACY,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EAC7F,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAACY,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EACnF,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAACY,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;EAEtFZ,SAAS,CAAC,MAAM;IACd,MAAMiB,kBAAkB,GAAGN,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC/D,IAAIK,kBAAkB,EAAE;MACtBD,eAAe,CAACC,kBAAkB,CAAC;IACrC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGA,CAACL,WAAW,EAAEE,YAAY,KAAK;IAC3CD,cAAc,CAACD,WAAW,CAAC;IAC3BG,eAAe,CAACD,YAAY,CAAC;IAC7BJ,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEN,WAAW,CAAC;IAChDF,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAEJ,YAAY,CAAC;IAClDL,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMU,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMlB,KAAK,CAACmB,IAAI,CAAC,GAAGpB,YAAY,gBAAgB,EAAE,CAAC,CAAC,EAAE;QACpDqB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,eAAe,EAAE,IAAI,CAAG;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,SAAS;MACRV,cAAc,CAAC,IAAI,CAAC;MACpBE,eAAe,CAAC,IAAI,CAAC;MACrBL,YAAY,CAACe,UAAU,CAAC,aAAa,CAAC;MACtCf,YAAY,CAACe,UAAU,CAAC,cAAc,CAAC;MACvChB,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,MAAMiB,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IAC7C,IAAI,CAACA,OAAO,CAACP,OAAO,EAAE;MACpBO,OAAO,CAACP,OAAO,GAAG,CAAC,CAAC;IACtB;IAEAO,OAAO,CAACP,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUT,WAAW,EAAE;IAE1D,IAAI;MACF,IAAIiB,QAAQ,GAAG,MAAM5B,KAAK,CAAC0B,GAAG,EAAEC,OAAO,CAAC;MAExC,IAAIC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,QAAQ,GAAG,MAAMC,kBAAkB,CAAC,CAAC;QAC3C,IAAID,QAAQ,EAAE;UACZH,OAAO,CAACP,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUU,QAAQ,EAAE;UACvDF,QAAQ,GAAG,MAAM5B,KAAK,CAAC0B,GAAG,EAAEC,OAAO,CAAC;QACtC;MACF;MAEA,OAAOC,QAAQ;IACjB,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAOA,KAAK,CAACM,QAAQ;IACvB;EACF,CAAC;;EAED;EACA,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvBxB,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACtC,CAAC;EAED,oBACEL,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAE3B,eAAe;MAAES,KAAK;MAAEE,MAAM;MAAEO,SAAS;MAAEO;IAAW,CAAE;IAAA3B,QAAA,EACpFA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,EAAA,CA1EIF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AA4ElB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}