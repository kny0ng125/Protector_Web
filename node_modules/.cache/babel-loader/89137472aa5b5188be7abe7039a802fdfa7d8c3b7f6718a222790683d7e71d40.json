{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\Chart\\\\DoubleChart.js\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, LineElement, TimeScale, Title, Tooltip, Legend);\nconst DoubleChart = ({\n  oxygenSaturationData,\n  title\n}) => {\n  if (!oxygenSaturationData || !oxygenSaturationData.content) {\n    console.log('Data:', oxygenSaturationData);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911 \\uBB38\\uC81C\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  const labels = oxygenSaturationData.content.map(item => new Date(item.measuredAt));\n  const o2SatData = oxygenSaturationData.content.map(item => item.o2Sat * 100);\n  const atmData = oxygenSaturationData.content.map(item => item.atm);\n  const barData = {\n    labels,\n    datasets: [{\n      type: 'bar',\n      label: '산소 포화도 (%)',\n      data: o2SatData,\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderWidth: 1,\n      yAxisID: 'y1'\n    }, {\n      type: 'line',\n      label: '대기압 (atm)',\n      data: atmData,\n      borderColor: 'rgba(255, 99, 132, 1)',\n      borderWidth: 2,\n      fill: false,\n      tension: 0.1,\n      yAxisID: 'y2'\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: title // title prop을 사용하여 차트 제목 설정\n      }\n    },\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MM/dd'\n          }\n        },\n        title: {\n          display: true,\n          text: '날짜'\n        }\n      },\n      y1: {\n        type: 'linear',\n        position: 'left',\n        title: {\n          display: true,\n          text: '산소 포화도 (%)'\n        },\n        ticks: {\n          beginAtZero: true\n        }\n      },\n      y2: {\n        type: 'linear',\n        position: 'right',\n        title: {\n          display: true,\n          text: '대기압 (atm)'\n        },\n        ticks: {\n          beginAtZero: true\n        },\n        grid: {\n          drawOnChartArea: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: barData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_c = DoubleChart;\nexport default DoubleChart;\nvar _c;\n$RefreshReg$(_c, \"DoubleChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","LineElement","Title","Tooltip","Legend","TimeScale","Bar","jsxDEV","_jsxDEV","register","DoubleChart","oxygenSaturationData","title","content","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","item","Date","measuredAt","o2SatData","o2Sat","atmData","atm","barData","datasets","type","label","data","backgroundColor","borderWidth","yAxisID","borderColor","fill","tension","options","responsive","plugins","legend","position","display","text","scales","x","time","unit","displayFormats","day","y1","ticks","beginAtZero","y2","grid","drawOnChartArea","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/Chart/DoubleChart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  BarElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale,\r\n} from 'chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  TimeScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst DoubleChart = ({ oxygenSaturationData, title }) => {\r\n  if (!oxygenSaturationData || !oxygenSaturationData.content) {\r\n    console.log('Data:', oxygenSaturationData);\r\n    return <p>데이터를 불러오는 중 문제가 발생했습니다.</p>;\r\n  }\r\n\r\n  const labels = oxygenSaturationData.content.map((item) => new Date(item.measuredAt));\r\n  const o2SatData = oxygenSaturationData.content.map((item) => item.o2Sat * 100);\r\n  const atmData = oxygenSaturationData.content.map((item) => item.atm);\r\n\r\n  const barData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        type: 'bar',\r\n        label: '산소 포화도 (%)',\r\n        data: o2SatData,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n        borderWidth: 1,\r\n        yAxisID: 'y1',\r\n      },\r\n      {\r\n        type: 'line',\r\n        label: '대기압 (atm)',\r\n        data: atmData,\r\n        borderColor: 'rgba(255, 99, 132, 1)',\r\n        borderWidth: 2,\r\n        fill: false,\r\n        tension: 0.1,\r\n        yAxisID: 'y2',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: title, // title prop을 사용하여 차트 제목 설정\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        type: 'time',\r\n        time: {\r\n          unit: 'day',\r\n          displayFormats: {\r\n            day: 'MM/dd',\r\n          },\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: '날짜',\r\n        },\r\n      },\r\n      y1: {\r\n        type: 'linear',\r\n        position: 'left',\r\n        title: {\r\n          display: true,\r\n          text: '산소 포화도 (%)',\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n      y2: {\r\n        type: 'linear',\r\n        position: 'right',\r\n        title: {\r\n          display: true,\r\n          text: '대기압 (atm)',\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n        grid: {\r\n          drawOnChartArea: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      <Bar data={barData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoubleChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}