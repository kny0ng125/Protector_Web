{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\Chart\\\\DoubleChart.js\";\n// OxygenSaturationChart.js\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend);\nconst DoubleChart = ({\n  oxygenSaturationData,\n  dailyAverage\n}) => {\n  if (!oxygenSaturationData || !oxygenSaturationData.content) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n  const labels = oxygenSaturationData.content.map(item => item.measuredAt);\n  const o2SatData = oxygenSaturationData.content.map(item => item.o2Sat * 100); // 퍼센트로 변환\n  const atmData = oxygenSaturationData.content.map(item => item.atm);\n  const barData = {\n    labels,\n    datasets: [{\n      type: 'bar',\n      label: 'Oxygen Saturation (%)',\n      data: o2SatData,\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderWidth: 1\n    }, {\n      type: 'line',\n      label: 'Atmospheric Pressure (atm)',\n      data: atmData,\n      borderColor: 'rgba(255, 99, 132, 1)',\n      borderWidth: 2,\n      fill: false,\n      tension: 0.1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Oxygen Saturation and Atmospheric Pressure'\n      }\n    },\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MM/DD'\n          }\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Values'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: barData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 14\n  }, this);\n};\n_c = DoubleChart;\nexport default DoubleChart;\nvar _c;\n$RefreshReg$(_c, \"DoubleChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Title","Tooltip","Legend","Bar","Line","jsxDEV","_jsxDEV","register","DoubleChart","oxygenSaturationData","dailyAverage","content","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","item","measuredAt","o2SatData","o2Sat","atmData","atm","barData","datasets","type","label","data","backgroundColor","borderWidth","borderColor","fill","tension","options","responsive","plugins","legend","position","title","display","text","scales","x","time","unit","displayFormats","day","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/Chart/DoubleChart.js"],"sourcesContent":["// OxygenSaturationChart.js\r\nimport React from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst DoubleChart = ({ oxygenSaturationData, dailyAverage }) => {\r\n    if (!oxygenSaturationData || !oxygenSaturationData.content) {\r\n        return <p>데이터를 불러오는 중입니다...</p>;\r\n      }\r\n    \r\n      const labels = oxygenSaturationData.content.map(item => item.measuredAt);\r\n      const o2SatData = oxygenSaturationData.content.map(item => item.o2Sat * 100); // 퍼센트로 변환\r\n      const atmData = oxygenSaturationData.content.map(item => item.atm);\r\n    \r\n      const barData = {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            type: 'bar',\r\n            label: 'Oxygen Saturation (%)',\r\n            data: o2SatData,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n            borderWidth: 1,\r\n          },\r\n          {\r\n            type: 'line',\r\n            label: 'Atmospheric Pressure (atm)',\r\n            data: atmData,\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            borderWidth: 2,\r\n            fill: false,\r\n            tension: 0.1,\r\n          },\r\n        ],\r\n      };\r\n    \r\n      const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Oxygen Saturation and Atmospheric Pressure',\r\n          },\r\n        },\r\n        scales: {\r\n          x: {\r\n            type: 'time',\r\n            time: {\r\n              unit: 'day',\r\n              displayFormats: {\r\n                day: 'MM/DD',\r\n              },\r\n            },\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n            title: {\r\n              display: true,\r\n              text: 'Values',\r\n            },\r\n          },\r\n        },\r\n      };\r\n    \r\n      return <Bar data={barData} options={options} />;\r\n    };\r\n\r\nexport default DoubleChart;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACtI,SAASC,GAAG,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5CZ,OAAO,CAACa,QAAQ,CACdZ,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMM,WAAW,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC;AAAa,CAAC,KAAK;EAC5D,IAAI,CAACD,oBAAoB,IAAI,CAACA,oBAAoB,CAACE,OAAO,EAAE;IACxD,oBAAOL,OAAA;MAAAM,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC;EAEA,MAAMC,MAAM,GAAGR,oBAAoB,CAACE,OAAO,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC;EACxE,MAAMC,SAAS,GAAGZ,oBAAoB,CAACE,OAAO,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;EAC9E,MAAMC,OAAO,GAAGd,oBAAoB,CAACE,OAAO,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACK,GAAG,CAAC;EAElE,MAAMC,OAAO,GAAG;IACdR,MAAM;IACNS,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,uBAAuB;MAC9BC,IAAI,EAAER,SAAS;MACfS,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE;IACf,CAAC,EACD;MACEJ,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,4BAA4B;MACnCC,IAAI,EAAEN,OAAO;MACbS,WAAW,EAAE,uBAAuB;MACpCD,WAAW,EAAE,CAAC;MACdE,IAAI,EAAE,KAAK;MACXC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDjB,IAAI,EAAE,MAAM;QACZkB,IAAI,EAAE;UACJC,IAAI,EAAE,KAAK;UACXC,cAAc,EAAE;YACdC,GAAG,EAAE;UACP;QACF;MACF,CAAC;MACDC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBV,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBAAOpC,OAAA,CAACH,GAAG;IAAC0B,IAAI,EAAEJ,OAAQ;IAACU,OAAO,EAAEA;EAAQ;IAAAtB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjD,CAAC;AAACmC,EAAA,GA/DA3C,WAAW;AAiEjB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}