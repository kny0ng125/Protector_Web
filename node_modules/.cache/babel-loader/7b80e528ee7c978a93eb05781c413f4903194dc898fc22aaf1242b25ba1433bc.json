{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API_BASE_URL from './Config';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('accessToken'));\n  const [accessToken, setAccessToken] = useState(localStorage.getItem('accessToken'));\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedRefreshToken = localStorage.getItem('refreshToken');\n    if (storedRefreshToken) {\n      setRefreshToken(storedRefreshToken);\n    }\n  }, []);\n  const login = (accessToken, refreshToken) => {\n    setAccessToken(accessToken);\n    setRefreshToken(refreshToken);\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n    setIsAuthenticated(true);\n  };\n  const logout = async () => {\n    try {\n      await axios.post(`${API_BASE_URL}/doctor/logout`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`,\n          'Cookie': `refresh-token=${refreshToken}`\n        }\n      });\n    } catch (error) {\n      console.error('Error logging out:', error);\n    } finally {\n      setAccessToken(null);\n      setRefreshToken(null);\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      setIsAuthenticated(false);\n      navigate('/login');\n    }\n  };\n  const refreshAccessToken = async () => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/doctor/reissue`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Cookie': `refresh-token=${refreshToken}`\n        }\n      });\n      if (response.status === 200) {\n        const newAccessToken = response.data.accessToken;\n        setAccessToken(newAccessToken);\n        localStorage.setItem('accessToken', newAccessToken);\n        return newAccessToken;\n      } else {\n        logout();\n      }\n    } catch (error) {\n      console.error('Error refreshing access token:', error);\n      logout();\n    }\n  };\n  const authFetch = async (url, options = {}) => {\n    if (!options.headers) {\n      options.headers = {};\n    }\n    options.headers['Authorization'] = `Bearer ${accessToken}`;\n    try {\n      let response = await axios(url, options);\n      if (response.status === 401) {\n        const newToken = await refreshAccessToken();\n        if (newToken) {\n          options.headers['Authorization'] = `Bearer ${newToken}`;\n          response = await axios(url, options);\n        }\n      }\n      return response;\n    } catch (error) {\n      console.error('Error in authFetch:', error);\n      return error.response;\n    }\n  };\n\n  // 임시 로그인 상태 변경 함수\n  const toggleAuth = () => {\n    setIsAuthenticated(!isAuthenticated);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      authFetch,\n      toggleAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"nIqYHBBKfOQL40aximXlwxOJeIg=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","API_BASE_URL","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","accessToken","setAccessToken","refreshToken","setRefreshToken","navigate","storedRefreshToken","login","setItem","logout","post","headers","error","console","removeItem","refreshAccessToken","response","status","newAccessToken","data","authFetch","url","options","newToken","toggleAuth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API_BASE_URL from './Config';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('accessToken'));\r\n  const [accessToken, setAccessToken] = useState(localStorage.getItem('accessToken'));\r\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const storedRefreshToken = localStorage.getItem('refreshToken');\r\n    if (storedRefreshToken) {\r\n      setRefreshToken(storedRefreshToken);\r\n    }\r\n  }, []);\r\n\r\n  const login = (accessToken, refreshToken) => {\r\n    setAccessToken(accessToken);\r\n    setRefreshToken(refreshToken);\r\n    localStorage.setItem('accessToken', accessToken);\r\n    localStorage.setItem('refreshToken', refreshToken);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/doctor/logout`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${accessToken}`,\r\n          'Cookie': `refresh-token=${refreshToken}`\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error logging out:', error);\r\n    } finally {\r\n      setAccessToken(null);\r\n      setRefreshToken(null);\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      setIsAuthenticated(false);\r\n      navigate('/login');\r\n    }\r\n  };\r\n\r\n  const refreshAccessToken = async () => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/doctor/reissue`, {}, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Cookie': `refresh-token=${refreshToken}`,\r\n        }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const newAccessToken = response.data.accessToken;\r\n        setAccessToken(newAccessToken);\r\n        localStorage.setItem('accessToken', newAccessToken);\r\n        return newAccessToken;\r\n      } else {\r\n        logout();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error refreshing access token:', error);\r\n      logout();\r\n    }\r\n  };\r\n\r\n  const authFetch = async (url, options = {}) => {\r\n    if (!options.headers) {\r\n      options.headers = {};\r\n    }\r\n\r\n    options.headers['Authorization'] = `Bearer ${accessToken}`;\r\n\r\n    try {\r\n      let response = await axios(url, options);\r\n\r\n      if (response.status === 401) {\r\n        const newToken = await refreshAccessToken();\r\n        if (newToken) {\r\n          options.headers['Authorization'] = `Bearer ${newToken}`;\r\n          response = await axios(url, options);\r\n        }\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error in authFetch:', error);\r\n      return error.response;\r\n    }\r\n  };\r\n\r\n  // 임시 로그인 상태 변경 함수\r\n  const toggleAuth = () => {\r\n    setIsAuthenticated(!isAuthenticated);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, authFetch, toggleAuth }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}