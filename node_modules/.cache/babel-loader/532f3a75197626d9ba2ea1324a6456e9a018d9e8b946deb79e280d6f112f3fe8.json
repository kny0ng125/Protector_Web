{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17Z90R\\\\protector_client\\\\src\\\\Components\\\\Patient_Info\\\\PatientInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom'; // useParams 훅을 가져옵니다.\nimport { AuthContext } from '../AuthContext'; // 인증 정보를 가져옵니다.\nimport API_BASE_URL from '../Config';\nimport './PatientInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientInfo = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // URL에서 환자 id를 가져옵니다.\n  const {\n    authFetch\n  } = useContext(AuthContext); // 인증 정보를 사용하기 위한 context\n  const [patientData, setPatientData] = useState(null); // 환자 데이터를 저장할 상태를 정의합니다.\n  const [loading, setLoading] = useState(true); // 로딩 상태 관리\n  const [error, setError] = useState(null); // 에러 상태 관리\n\n  useEffect(() => {\n    // id를 사용하여 API 호출을 통해 환자 데이터를 가져옵니다.\n    const fetchPatientData = async () => {\n      setLoading(true);\n      try {\n        const response = await authFetch(`${API_BASE_URL}/doctor/patient/${id}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}` // 헤더에 토큰 추가\n          }\n        });\n        const data = await response.data;\n        setPatientData(data); // 받아온 환자 데이터를 상태에 저장합니다.\n      } catch (error) {\n        console.error('Error fetching patient data:', error);\n        setError('환자 정보를 가져오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatientData();\n  }, [id, authFetch]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (!patientData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD658\\uC790 \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uC9C0 \\uBABB\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD658\\uC790 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"UUID: \", patientData.uuid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", patientData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Birth: \", patientData.birth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uB9C8\\uC9C0\\uB9C9 \\uB0B4\\uC6D0\\uC77C: \", patientData.lastAppointmentAt || '내원 기록 없음']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientInfo, \"KCAN7HlUITfn0NuvpBcgpW/SdO0=\", false, function () {\n  return [useParams];\n});\n_c = PatientInfo;\nexport default PatientInfo;\nvar _c;\n$RefreshReg$(_c, \"PatientInfo\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","AuthContext","API_BASE_URL","jsxDEV","_jsxDEV","PatientInfo","_s","id","authFetch","patientData","setPatientData","loading","setLoading","error","setError","fetchPatientData","response","method","headers","localStorage","getItem","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","uuid","name","birth","lastAppointmentAt","_c","$RefreshReg$"],"sources":["C:/Users/17Z90R/protector_client/src/Components/Patient_Info/PatientInfo.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom'; // useParams 훅을 가져옵니다.\r\nimport { AuthContext } from '../AuthContext'; // 인증 정보를 가져옵니다.\r\nimport API_BASE_URL from '../Config';\r\nimport './PatientInfo.css';\r\n\r\nconst PatientInfo = () => {\r\n  const { id } = useParams(); // URL에서 환자 id를 가져옵니다.\r\n  const { authFetch } = useContext(AuthContext); // 인증 정보를 사용하기 위한 context\r\n  const [patientData, setPatientData] = useState(null); // 환자 데이터를 저장할 상태를 정의합니다.\r\n  const [loading, setLoading] = useState(true); // 로딩 상태 관리\r\n  const [error, setError] = useState(null); // 에러 상태 관리\r\n\r\n  useEffect(() => {\r\n    // id를 사용하여 API 호출을 통해 환자 데이터를 가져옵니다.\r\n    const fetchPatientData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await authFetch(`${API_BASE_URL}/doctor/patient/${id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`, // 헤더에 토큰 추가\r\n          },\r\n        });\r\n        const data = await response.data;\r\n        setPatientData(data); // 받아온 환자 데이터를 상태에 저장합니다.\r\n      } catch (error) {\r\n        console.error('Error fetching patient data:', error);\r\n        setError('환자 정보를 가져오는 중 오류가 발생했습니다.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPatientData();\r\n  }, [id, authFetch]);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  if (!patientData) {\r\n    return <p>환자 데이터를 불러오지 못했습니다.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"patient-info\">\r\n      <h2>환자 정보</h2>\r\n      <p>UUID: {patientData.uuid}</p>\r\n      <p>Name: {patientData.name}</p>\r\n      <p>Birth: {patientData.birth}</p>\r\n      <p>마지막 내원일: {patientData.lastAppointmentAt || '내원 기록 없음'}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientInfo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}